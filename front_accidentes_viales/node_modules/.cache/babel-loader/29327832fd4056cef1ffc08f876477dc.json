{"ast":null,"code":"var _jsxFileName = \"/home/enriquevc/Documents/DeepLearning/Aprendizaje_Automatizado/front_accidentes_viales/src/components/predict.js\";\nimport React, { useState } from 'react';\n\nfunction Predict() {\n  const [model, setModel] = useState('');\n  const [column, setColumn] = useState('');\n  const [value, setValue] = useState('');\n\n  const handleModelChange = e => {\n    setModel(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const handleColumnChange = e => {\n    setColumn(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const handleValueChange = e => {\n    setValue(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const onPredict = e => {\n    let url = new URL(process.env.PREDICT);\n    url.search = new URLSearchParams({\n      model: model,\n      column: column,\n      value: value\n    });\n    fetch(url, {\n      mode: 'no-cors',\n      method: \"GET\" //body: JSON.stringify({ \"model\": model, \"column\": \"mes\", \"value\": 3 }),\n\n    }).then(function (response) {\n      console.log(response);\n    }, function (error) {\n      console.log(\"error, failed to  communicate with the API\");\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"PREDICT\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Select Model:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => handleModelChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sklearn_linear_LSR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"sklearn_linear_LSR\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"polynomial_LSR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"polynomial_LSR\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"linear_LSR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"linear_LSR\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \" Columna\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleColumnChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \" Value\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleValueChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => onPredict(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Predict\"));\n}\n\nexport default Predict;","map":{"version":3,"sources":["/home/enriquevc/Documents/DeepLearning/Aprendizaje_Automatizado/front_accidentes_viales/src/components/predict.js"],"names":["React","useState","Predict","model","setModel","column","setColumn","value","setValue","handleModelChange","e","target","console","log","handleColumnChange","handleValueChange","onPredict","url","URL","process","env","PREDICT","search","URLSearchParams","fetch","mode","method","then","response","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAIA,SAASC,OAAT,GAAmB;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,iBAAiB,GAAIC,CAAD,IAAO;AAAEN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AAA0BK,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASJ,KAArB;AAA8B,GAA3F;;AACA,QAAMO,kBAAkB,GAAIJ,CAAD,IAAO;AAAEJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAT;AAA2BK,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASJ,KAArB;AAA8B,GAA7F;;AACA,QAAMQ,iBAAiB,GAAIL,CAAD,IAAO;AAAEF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AAA0BK,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASJ,KAArB;AAA8B,GAA3F;;AAEA,QAAMS,SAAS,GAAIN,CAAD,IAAO;AACrB,QAAIO,GAAG,GAAG,IAAIC,GAAJ,CAAQC,OAAO,CAACC,GAAR,CAAYC,OAApB,CAAV;AACAJ,IAAAA,GAAG,CAACK,MAAJ,GAAa,IAAIC,eAAJ,CAAoB;AAC7BpB,MAAAA,KAAK,EAAEA,KADsB;AAE7BE,MAAAA,MAAM,EAAEA,MAFqB;AAG7BE,MAAAA,KAAK,EAAEA;AAHsB,KAApB,CAAb;AAKAiB,IAAAA,KAAK,CAACP,GAAD,EAAM;AACPQ,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,MAAM,EAAE,KAFD,CAGP;;AAHO,KAAN,CAAL,CAIGC,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ;AACH,KAND,EAMG,UAAUC,KAAV,EAAiB;AAChBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACH,KATD;AAUH,GAjBD;;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAQ,IAAA,QAAQ,EAAEnB,CAAC,IAAID,iBAAiB,CAACC,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CAHJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI;AAAO,IAAA,QAAQ,EAAEA,CAAC,IAAII,kBAAkB,CAACJ,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAO,IAAA,QAAQ,EAAEA,CAAC,IAAIK,iBAAiB,CAACL,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAqBI;AACI,IAAA,OAAO,EAAEA,CAAC,IAAIM,SAAS,CAACN,CAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBJ,CADJ;AA4BH;;AACD,eAAeR,OAAf","sourcesContent":["import React, { useState } from 'react';\n\n\n\nfunction Predict() {\n    const [model, setModel] = useState('');\n    const [column, setColumn] = useState('');\n    const [value, setValue] = useState('');\n\n    const handleModelChange = (e) => { setModel(e.target.value); console.log(e.target.value); }\n    const handleColumnChange = (e) => { setColumn(e.target.value); console.log(e.target.value); }\n    const handleValueChange = (e) => { setValue(e.target.value); console.log(e.target.value); }\n\n    const onPredict = (e) => {\n        let url = new URL(process.env.PREDICT);\n        url.search = new URLSearchParams({\n            model: model,\n            column: column,\n            value: value\n        })\n        fetch(url, {\n            mode: 'no-cors',\n            method: \"GET\",\n            //body: JSON.stringify({ \"model\": model, \"column\": \"mes\", \"value\": 3 }),\n        }).then(function (response) {\n            console.log(response);\n        }, function (error) {\n            console.log(\"error, failed to  communicate with the API\");\n            console.log(error);\n        })\n    }\n    return (\n        <div>\n            <h3>PREDICT</h3>\n            <h2>Select Model:</h2>\n            <select onChange={e => handleModelChange(e)}>\n                <option value='sklearn_linear_LSR'>\n                    sklearn_linear_LSR\n                </option >\n                <option value='polynomial_LSR'>\n                    polynomial_LSR\n                </option>\n                <option value='linear_LSR'>\n                    linear_LSR\n                </option>\n            </select>\n            <label> Columna</label>\n            <input onChange={e => handleColumnChange(e)}>\n            </input>\n            <label> Value</label>\n            <input onChange={e => handleValueChange(e)}>\n            </input>\n\n            <button\n                onClick={e => onPredict(e)}>\n                Predict\n            </button>\n        </div>\n    );\n}\nexport default Predict;\n\n\n"]},"metadata":{},"sourceType":"module"}